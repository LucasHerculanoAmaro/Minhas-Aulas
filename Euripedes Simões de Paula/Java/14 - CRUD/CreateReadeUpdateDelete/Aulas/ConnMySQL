1. 	INTRODUÇÃO {

	Esta é a primeira aula do nosso Projeto CRUD, onde vamos aprender os 
	métodos para a Criação (Create), Leitura (Read), Atualização (Update) 
	e Exclusão (Delete) de dados no banco de dados MySQL.
	
	O que faremos nessa aula? 
	Vamos aprender a confugurar a conexão com o Banco de Dados MySQL, 
	utilizando o driver MySQL Connector/J.
	
	Lembrando que esta conexão é necessária para a IDE conseguir se 
	comunicar com o banco de dados e realizar as operações do CRUD.
}
	
2. 	FALANDO SOBRE A NOSSA APLICAÇÃO {
	
	Nosso objetivo nessas aulas, por enquanto, é abordar de maneira mais 
	profunda o que podemos fazer com a linguagem Java e com a IDE Eclipse na 
	prática. Porém, a aplicação que criaremos não será complexa, conforme 
	podemos observar em vídeos no Youtube ou projetos profissionais ou 
	semi-profissionais no Github, mas é um projeto que introduzirá métodos,
	técnicas, e outros conceitos observados em aulas anteriores.
	
	Vamos apenas criar uma aplicação que implementa os métodos CRUD utilizando
	o objeto Usuário, que terá os seguintes atributos: 
		
		* id;
		* nome;
		* e-mail.
	
	Sem mais demora, vamos começar.

3.	DRIVER MySQL {

	O primeiro passo para nossa aplicação será criar uma conexão com o banco 
	de dados MySQL. O link onde podemos encontrar o drive é: 
	
		https://dev.mysql.com/downloads/connector/j/
	
	Para nosso projeto, vamos utilizar o driver "mysql-connector-j-8.3.0".
	O Driver será baixado em um aquivo ".zip", então será necessário
	descompactar este arquivo antes de tentar instalá-lo. Então, crie uma 
	pasta (com o nome de "Resources") no seu projeto e adicione o driver para 
	mantê-lo disponível na IDE e ficar mais fácil localizá-lo.
	
	Após baixar o driver, adicionar na pasta "Resources" e descompactar o 
	arquivo, será necessário adicionar o arquivo JAR ao classpath do projeto.
	Lembre-se que cada IDE pode conter um jeito diferente de configurar, então
	vamos aprender como fazer isso com o Eclipse.
	
	Vamos aos passos:
		
		1. Clique com o botão direito encima da pasta do seu projeto.
		2. Escolha a opção 'Build Path' e depois 'Configure Build Path'.
		3. Escola a opção 'Libraries'.
		4. Clique em 'Add External JARs...'.
		5. Escolha a pasta que o arquivo JAR está e o selecione.
		6. Clique em 'Apply and Close'.
	
	Após os passos acima serem realizados, será criado uma pasta com o nome 
	de 'referenced Libraries', que conterá o arquivo JAR. Isso indica que o 
	driver á está em uso no projeto.
	
4.	TRABALHANDO COM A CLASSE DE CONEXÃO	
	
	Agora, vamos trabalhar com a conexão via código, onde vamos criar uma 
	classe para conexão e adicionar o caminha para nosso banco de dados,
	com login e senha.
	
	Nosso objetivo com essa classe será criar uma conexão e obter um retorno
	dessa conexão. Mas antes, precisamos seguir os passos que, por diversas 
	vezes, seguimos em nossas aulas:
	
		1. Crie um Pacote (com o nome de 'Factory') dedicado para conexão.
		2. Crie uma Classe (com o nome de 'DatabaseConnection').

	Agora que o Pacote e a Classe foram criados, vamos desenvolver a 
	continuação de nossa aula dentro da classe.
}

5.	CONCLUSÃO {
	
	Nesta aula:
		
		1. Entendemos qual é o nosso projeto.
		2. Baixamos o driver MySQL.
		3. Adicionamos o driver a nossa aplicação.
		4. Criamos um Pacote e uma Classe para fazer a conexão com o MySQL.
		
	Na próxima aula, vamos aprender a criar uma conexão com o banco de dados
	MySQL utilizando a URL, Login e Senha do banco de dados.
}

6. REFERÊNCIAS {
	
	MySQL Community Downloads - Connector/J
	https://dev.mysql.com/downloads/connector/j/
	
}